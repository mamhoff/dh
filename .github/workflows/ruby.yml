name: Ruby

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: douglas_henderson_test
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
    - uses: actions/checkout@v1

    - name: Verify MariaDB connection
      env:
        PORT: ${{ job.services.mariadb.ports[3306] }}
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
          sleep 1
        done

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "2.7"
    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Restore apt cache
      id: apt-cache
      uses: actions/cache@v1
      with:
        path: /home/runner/apt/cache
        key: apt-mysql-
    - name: Install MySQL headers
      run: |
        sudo mkdir -p /home/runner/apt/cache
        sudo apt-get update -qq
        sudo apt-get install -qq --fix-missing libmysqlclient-dev -o dir::cache::archives="/home/runner/apt/cache"
        sudo chown -R runner /home/runner/apt/cache
    - name: Install bundler
      run: |
        gem install bundler
    - name: Restore Ruby Gems cache
      id: cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-
    - name: Install bundle
      timeout-minutes: 10
      run: |
        bundle install --jobs 4 --retry 3 --path vendor/bundle
    - name: Build and test with RSpec
      env:
        RAILS_ENV: test
        DB_USER: user
        DB_PASSWORD: password
        DB_PORT: ${{ job.services.mariadb.ports[3306] }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: |
        cp config/database.yml.example config/database.yml
        bundle exec rake db:test:prepare
        bundle exec rspec
    - name: deploy_production
      if: github.ref == 'refs/heads/production'
      run: |
        bundle exec cap production deploy
